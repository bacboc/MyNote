//백준1012 유기농 배추
//DFS

#include<iostream>
#include<vector>
using namespace std;
int N , M ;
int map[51][51];
bool visited[51][51];
int dx[]={0,0,-1,1};
int dy[]={-1,1,0,0};
int sol =0;
vector<int> SOL;
void check(int x, int y){
    visited[y][x] = true;
    for(int d=0 ; d<4; d++){
        if(0<=x+dx[d]&&x+dx[d]<M && 0<=y+dy[d]&&y+dy[d]<N ){
            if(map[y+dy[d]][x+dx[d]] == 1 && visited[y+dy[d]][x+dx[d]] ==false){
                check(x+dx[d],y+dy[d]);
            }
        }
    }
}
int main(){
    int T,K,X,Y;
    cin >> T;
    for(int t=0; t< T ; t++){
        cin >> M >> N >> K;
        for(int r=0; r<N; r++){
            for(int c=0; c<M; c++){
                map[r][c] = 0;
                visited[r][c] = false;
            }
        }
        for(int k=0; k<K; k++){
            cin >> Y >> X;
            map[X][Y]=1;
        }
        
        //map check
        for(int r=0; r<N; r++){
            for(int c=0; c<M; c++){
                if(map[r][c] == 1 && visited[r][c] ==false){
                    sol++;
                    check(c,r);
                }
            }
        }
        SOL.push_back(sol);
        sol=0;
        
    }
    for(int s=0; s<SOL.size(); s++)
        cout<<SOL[s]<<"\n";
    
    return 0;
}